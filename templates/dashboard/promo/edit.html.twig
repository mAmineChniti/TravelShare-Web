{% extends 'base.html.twig' %} {% block title %}Edit Promo{% endblock %} {% block body %}
<div class="container py-5">
	<h1 class="display-4 fw-bold mb-4">Edit Promo</h1>
	<div class="row">
		<div class="col-md-12">
			<form method="post" action="{{ path('app_promo_edit', {id: promo.promoid}) }}" class="card shadow">
				<div class="card-body p-4">
					<div class="mb-3">
						<label for="codepromo" class="form-label">Promo Code</label>
						<input type="text" id="codepromo" name="codepromo" value="{{ promo.codepromo }}" class="form-control" />
					</div>
					<div class="mb-3">
						<label for="dateexpiration" class="form-label">Expiration Date</label>
						<input
							type="date"
							id="dateexpiration"
							name="dateexpiration"
							value="{{ promo.dateexpiration|date('Y-m-d') }}"
							class="form-control"
						/>
					</div>
					<div class="mb-3">
						<label for="pourcentagepromo" class="form-label">Discount (%)</label>
						<input
							type="number"
							id="pourcentagepromo"
							name="pourcentagepromo"
							value="{{ promo.pourcentagepromo }}"
							class="form-control"
						/>
					</div>
					<div class="mb-3">
						<label for="nombremaxpersonne" class="form-label">Max People</label>
						<input
							type="number"
							id="nombremaxpersonne"
							name="nombremaxpersonne"
							value="{{ promo.nombremaxpersonne }}"
							class="form-control"
						/>
					</div>
					<div id="error-messages" class="mt-3"></div>
					<div class="d-flex justify-content-between mt-4">
						<button type="submit" class="btn btn-primary">Update Promo</button>
						<a href="{{ path('app_promo') }}" class="btn btn-outline-secondary"> Cancel </a>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>
<script>
	const PromoFormValidation = (() => {
		const CONFIG = {
			MIN_DISCOUNT: 0,
			MAX_DISCOUNT: 100,
			MIN_PEOPLE: 1,
		};

		const elements = {
			codepromo: document.getElementById("codepromo"),
			dateexpiration: document.getElementById("dateexpiration"),
			pourcentagepromo: document.getElementById("pourcentagepromo"),
			nombremaxpersonne: document.getElementById("nombremaxpersonne"),
			errorMessages: document.getElementById("error-messages"),
			form: document.querySelector("form"),
		};

		const Validator = {
			validateForm() {
				const errors = [];
				const today = new Date().toISOString().split("T")[0];

				if (!elements.codepromo.value.trim()) {
					errors.push("Promo code cannot be empty.");
				}

				if (!elements.dateexpiration.value || elements.dateexpiration.value < today) {
					errors.push("Expiration date must be today or in the future.");
				}

				if (
					!elements.pourcentagepromo.value ||
					parseInt(elements.pourcentagepromo.value) < CONFIG.MIN_DISCOUNT ||
					parseInt(elements.pourcentagepromo.value) > CONFIG.MAX_DISCOUNT
				) {
					errors.push(`Discount must be between ${CONFIG.MIN_DISCOUNT} and ${CONFIG.MAX_DISCOUNT}.`);
				}

				if (!elements.nombremaxpersonne.value || parseInt(elements.nombremaxpersonne.value) < CONFIG.MIN_PEOPLE) {
					errors.push("Max people must be at least 1.");
				}

				elements.errorMessages.innerHTML = "";
				if (errors.length > 0) {
					const alertDiv = document.createElement("div");
					alertDiv.className = "alert alert-danger";
					alertDiv.innerHTML = errors.map((error) => `<p class="mb-0">${error}</p>`).join("");
					elements.errorMessages.appendChild(alertDiv);
					return false;
				}

				return true;
			},
		};

		const FormHandler = {
			submitForm(event) {
				if (!Validator.validateForm()) {
					event.preventDefault();
				}
			},
		};

		const init = () => {
			elements.form.addEventListener("submit", FormHandler.submitForm);
		};

		if (document.readyState === "loading") {
			document.addEventListener("DOMContentLoaded", init);
		} else {
			init();
		}

		return {
			validateForm: Validator.validateForm,
		};
	})();
</script>
{% endblock %}

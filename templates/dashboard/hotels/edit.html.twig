{% extends 'base.html.twig' %} {% block title %}Edit Hotel{% endblock %} {% block body %}
<div class="container mx-auto px-4 mt-8 space-y-6">
	<h1 class="text-5xl font-bold mb-6">Edit Hotel</h1>
	<form method="POST" enctype="multipart/form-data" class="bg-white rounded-lg shadow-md p-6 space-y-4">
		<div>
			<label for="nom" class="block text-base font-medium text-gray-700 mb-2">Hotel Name</label>
			<input
				type="text"
				id="nom"
				name="nom"
				value="{{ hotel.nom }}"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>
		<div>
			<label for="adress" class="block text-base font-medium text-gray-700 mb-2">Address</label>
			<input
				type="text"
				id="adress"
				name="adress"
				value="{{ hotel.adress }}"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>
		<div>
			<label for="telephone" class="block text-base font-medium text-gray-700 mb-2">Phone</label>
			<input
				type="text"
				id="telephone"
				name="telephone"
				value="{{ hotel.telephone }}"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>
		<div>
			<label for="capaciteTotale" class="block text-base font-medium text-gray-700 mb-2">Total Capacity</label>
			<input
				type="number"
				id="capaciteTotale"
				name="capaciteTotale"
				value="{{ hotel.capaciteTotale }}"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>
		<div>
			<label for="imageH" class="block text-base font-medium text-gray-700 mb-2">Hotel Image</label>
			<input
				type="file"
				id="imageH"
				name="imageH"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
			{% if hotel.imageH %}
			<img
				src="data:image/jpeg;base64,{{ hotel.base64Image }}"
				alt="Hotel Image"
				class="w-full h-48 object-cover rounded-lg mt-4"
			/>
			{% endif %}
		</div>
		<div id="error-messages" class="mt-4"></div>
		<div class="flex justify-between">
			<button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg shadow">
				Save
			</button>
			<a
				href="{{ path('dashboard_hotels') }}"
				class="bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-2 px-4 rounded-lg"
			>
				Cancel
			</a>
		</div>
	</form>
</div>
<script>
	document.addEventListener("DOMContentLoaded", () => {
		const form = document.querySelector("form");
		const errorMessagesContainer = document.getElementById("error-messages");
		const successMessagesContainer = document.getElementById("success-messages");

		form.addEventListener("submit", (event) => {
			errorMessagesContainer.innerHTML = "";
			successMessagesContainer.innerHTML = "";

			const nom = document.getElementById("nom").value.trim();
			const adress = document.getElementById("adress").value.trim();
			const telephone = document.getElementById("telephone").value.trim();
			const capaciteTotale = document.getElementById("capaciteTotale").value.trim();
			const imageH = document.getElementById("imageH").files[0];

			let isValid = true;
			let errorMessages = [];

			if (!nom) {
				isValid = false;
				errorMessages.push("Hotel Name is required.");
			}

			if (!adress) {
				isValid = false;
				errorMessages.push("Address is required.");
			}

			if (!telephone || !/^[0-9]{8}$/.test(telephone)) {
				isValid = false;
				errorMessages.push("Phone must be exactly 8 digits.");
			}

			if (!capaciteTotale || isNaN(capaciteTotale) || parseInt(capaciteTotale) <= 0) {
				isValid = false;
				errorMessages.push("Total Capacity must be a positive number.");
			}

			if (!imageH) {
				isValid = false;
				errorMessages.push("Hotel Image is required.");
			}

			if (!isValid) {
				event.preventDefault();
				errorMessages.forEach((message) => {
					const errorElement = document.createElement("p");
					errorElement.textContent = message;
					errorElement.classList.add("text-sm", "text-red-600");
					errorMessagesContainer.appendChild(errorElement);
				});
			}
		});
	});
</script>
{% endblock %}

{% extends 'base.html.twig' %} {% block title %}Room Details{% endblock %} {% block body %}
<div class="container mx-auto px-4 mt-8 space-y-6">
	<h1 class="text-5xl font-bold mb-6">Room {{ room.numeroChambre }} Details</h1>

	<div class="bg-white rounded-lg shadow-md p-6">
		<div class="grid gap-6 md:grid-cols-2">
			<div>
				<p class="text-base text-gray-700 mb-2 font-medium">Price:</p>
				<p class="text-base text-gray-700 mb-4">{{ room.prixParNuit }} per night</p>
			</div>
			<div>
				<p class="text-base text-gray-700 mb-2 font-medium">Type:</p>
				<p class="text-base text-gray-700 mb-4">{{ room.typeEnu }}</p>
			</div>
			<div>
				<p class="text-base text-gray-700 mb-2 font-medium">Available:</p>
				<p class="text-base text-gray-700 mb-4">{{ room.disponible == 1 ? 'Yes' : 'No' }}</p>
			</div>
		</div>
		<form method="POST" action="{{ path('room_reserve', {'roomId': room.chambreId }) }}" class="space-y-4">
			<div>
				<p class="text-base text-gray-700 mb-2 font-medium">Start Reservation:</p>
				<input
					type="date"
					name="startReservation"
					class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
				/>
			</div>

			<div>
				<p class="text-base text-gray-700 mb-2 font-medium">End Reservation:</p>
				<input
					type="date"
					name="endReservation"
					class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
				/>
			</div>
			<div id="error-messages" class="mt-4"></div>
			{% for message in app.flashes('success') %}
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
				<span class="block sm:inline">{{ message }}</span>
			</div>
			{% endfor %}
			<div>
				<button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg shadow">
					Reserve Now
				</button>
			</div>
		</form>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const form = document.querySelector("form");
		const errorMessagesContainer = document.getElementById("error-messages");

		form.addEventListener("submit", (event) => {
			errorMessagesContainer.innerHTML = "";

			const startReservation = document.querySelector("input[name='startReservation']").value.trim();
			const endReservation = document.querySelector("input[name='endReservation']").value.trim();

			let isValid = true;
			let errorMessages = [];

			if (!startReservation) {
				isValid = false;
				errorMessages.push("Start reservation date cannot be empty.");
			}

			if (!endReservation) {
				isValid = false;
				errorMessages.push("End reservation date cannot be empty.");
			}

			if (startReservation && endReservation && new Date(startReservation) < new Date(endReservation)) {
				isValid = false;
				errorMessages.push("Start reservation date cannot be after the end reservation date.");
			}

			const today = new Date();
			today.setHours(0, 0, 0, 0);

			if (startReservation && new Date(startReservation) < today) {
				isValid = false;
				errorMessages.push("Start reservation date cannot be today or in the past.");
			}

			if (endReservation && new Date(endReservation) < today) {
				isValid = false;
				errorMessages.push("End reservation date cannot be today or in the past.");
			}

			if (!isValid) {
				event.preventDefault();
				errorMessages.forEach((message) => {
					const errorElement = document.createElement("p");
					errorElement.textContent = message;
					errorElement.classList.add("text-sm", "text-red-600");
					errorMessagesContainer.appendChild(errorElement);
				});
			}
		});
	});
</script>
{% endblock %}

<div id="post-{{ post.postId }}" class="bg-white rounded-lg shadow-md p-6">
	<div class="flex justify-between items-center mb-4">
		<span class="text-blue-600 font-medium">{{ post.name ~ ' ' ~ post.lastName }}</span>
		<div class="flex space-x-2">
			<button
				id="editButton-{{ post.postId }}"
				class="bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-2 px-4 rounded-lg"
				onclick="ForumApp.editPost('{{ post.postId }}')"
				title="Edit post"
			>
				<i class="fas fa-edit"></i>
			</button>

			<form
				hx-post="{{ path('app_forum_delete', {'id': post.postId}) }}"
				hx-target="#post-{{ post.postId }}"
				hx-swap="outerHTML"
				onsubmit="return confirm('Are you sure you want to delete this post?');"
				class="inline"
			>
				<button
					type="submit"
					class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg"
					title="Delete post"
				>
					<i class="fas fa-trash"></i>
				</button>
			</form>

			<twig:LikeButton postId="{{ post.postId }}" isLiked="{{ post.isLiked }}" likesCount="{{ post.likesCount }}" />
		</div>
	</div>

	<twig:PostText postId="{{ post.postId }}" textContent="{{ post.textContent }}" />

	<form
		id="editPostForm-{{ post.postId }}"
		style="display: none"
		class="space-y-4"
		action="{{ path('app_forum_edit', {'id': post.postId}) }}"
		onsubmit="return false;"
	>
		<div>
			<textarea
				name="editTextarea-{{ post.postId }}"
				id="editTextarea-{{ post.postId }}"
				class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none"
				maxlength="255"
			>
{{ post.textContent }}</textarea
			>
			<span id="editPostLength-{{ post.postId }}" class="text-sm text-gray-500">{{ post.textContent|length }}/255</span>
		</div>
		<p id="editPostErrorMessage-{{ post.postId }}" class="mt-1 text-sm text-red-600"></p>
		<div class="flex justify-end">
			<button
				type="button"
				onclick="ForumApp.submitEditPostIfValid(this.form, {{ post.postId }})"
				class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg"
				title="Save changes"
			>
				<i class="fas fa-save"></i>
			</button>
		</div>
	</form>

	<div class="mt-4">
		<form
			hx-post="{{ path('app_forum_comment') }}"
			hx-target="#commentsContainer-{{ post.postId }}"
			hx-swap="beforeend"
			hx-on::after-request="if(event.detail.successful) this.reset()"
			onsubmit="return validateCommentForm(this);"
		>
			<input type="hidden" name="postId" value="{{ post.postId }}" />
			<div>
				<textarea
					name="commentText"
					class="block w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none"
					placeholder="Write a comment..."
					maxlength="255"
				></textarea>
				<span id="newCommentLength-{{ post.postId }}" class="text-sm text-gray-500">0/255</span>
			</div>
			<p id="commentErrorMessage-{{ post.postId }}" class="mt-1 text-sm text-red-600"></p>
			<div class="flex justify-end">
				<button
					type="button"
					class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg"
					title="Add comment"
					onclick="if(validateCommentForm(this.form)) { htmx.trigger(this.form, 'submit'); }"
				>
					<i class="fas fa-paper-plane"></i>
				</button>
			</div>
		</form>
	</div>

	<div id="commentsContainer-{{ post.postId }}" class="mt-4 space-y-4">
		{% if post.comments is defined %} {% for comment in post.comments %}
		<twig:Comment
			commentId="{{ comment.commentId }}"
			comment="{{ comment.comment }}"
			name="{{ comment.name }}"
			lastName="{{ comment.lastName }}"
			commenterId="{{ comment.commenterId }}"
			commentedAt="{{ comment.commentedAt }}"
			updatedAt="{{ comment.updatedAt }}"
		/>
		{% endfor %} {% endif %}
	</div>
</div>

<script>
	(function () {
		const textarea = document.getElementById("editTextarea-{{ post.postId }}");
		if (textarea) {
			const counter = document.getElementById("editPostLength-{{ post.postId }}");
			textarea.addEventListener("input", () => {
				if (textarea.value.length > 255) {
					textarea.value = textarea.value.slice(0, 255);
				}
				counter.textContent = `${textarea.value.length}/255`;
			});
		}

		const commentTextarea = document.querySelector('textarea[name="commentText"]');
		if (commentTextarea) {
			const commentCounter = document.getElementById("newCommentLength-{{ post.postId }}");
			commentTextarea.addEventListener("input", () => {
				if (commentTextarea.value.length > 255) {
					commentTextarea.value = commentTextarea.value.slice(0, 255);
				}
				commentCounter.textContent = `${commentTextarea.value.length}/255`;
			});
		}
	})();
</script>

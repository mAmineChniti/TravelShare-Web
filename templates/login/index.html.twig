{% extends 'base.html.twig' %} {% block title %}Log In - TravelShare{% endblock %} {% block css %}
<style>
	.auth-wrapper {
		min-height: 85vh;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 2rem 1rem;
	}

	.auth-card {
		border: none;
		transition: all 0.3s;
		max-width: 940px;
	}

	.form-floating > label {
		left: 0.75rem;
	}

	.auth-sidebar {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		min-height: 200px;
		border-radius: 0.375rem 0 0 0.375rem;
		padding: 2rem;
		background-color: rgba(var(--bs-primary-rgb), 0.1);
	}

	.text-error {
		color: var(--bs-danger);
		font-size: 0.875rem;
		margin-top: 0.25rem;
	}

	.form-wrapper {
		margin-bottom: 1.5rem;
	}

	#error-message {
		display: none;
		color: var(--bs-danger);
		font-size: 0.875rem;
		margin-top: 0.25rem;
	}

	.invalid-input {
		border-color: var(--bs-danger) !important;
	}

	@media (max-width: 767.98px) {
		.auth-sidebar {
			border-radius: 0.375rem 0.375rem 0 0;
			min-height: 150px;
		}
	}
</style>
{% endblock %} {% block body %}
<div class="auth-wrapper">
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-md-10">
				<div class="card auth-card shadow">
					<div class="row g-0">
						<!-- Left Side -->
						<div class="col-md-4 d-none d-md-block">
							<div class="auth-sidebar h-100">
								<div class="text-center p-3">
									<h3 class="fs-4 fw-bold mb-3">Welcome Back!</h3>
									<p class="mb-4">Sign in to access your TravelShare account and start exploring</p>
									<a href="{{ path('app_register') }}" class="btn btn-outline-primary">
										<i class="fas fa-user-plus me-2"></i>Create an account
									</a>
								</div>
							</div>
						</div>

						<!-- Form Side -->
						<div class="col-md-8">
							<div class="card-body p-4 p-md-5">
								<div class="d-flex justify-content-between align-items-center mb-4">
									<h2 class="card-title fs-3 fw-bold m-0"><i class="fas fa-sign-in-alt me-2"></i>Sign In</h2>
									<div class="d-block d-md-none">
										<a href="{{ path('app_register') }}" class="btn btn-sm btn-outline-primary">
											<i class="fas fa-user-plus me-1"></i>Register
										</a>
									</div>
								</div>

								{% if error %}
								<div class="alert alert-danger">
									<i class="fas fa-exclamation-circle me-2"></i>{{ error.messageKey|trans(error.messageData, 'security')
									}}
								</div>
								{% endif %} {{ form_start(loginForm, {'action': path('app_login'), 'attr': {'id': 'loginForm', 'class':
								'needs-validation', 'novalidate': 'novalidate'}}) }}
								<div class="mb-3">
									<div class="form-floating">
										{{ form_widget(loginForm._email, { 'attr': { 'class': 'form-control', 'placeholder': 'Email
										Address', 'id': 'inputEmail', 'autofocus': true } }) }}
										<label for="inputEmail"> <i class="fas fa-envelope me-1"></i>Email Address </label>
									</div>
									<div class="text-error">{{ form_errors(loginForm._email) }}</div>
								</div>

								<div class="mb-3">
									<div class="form-floating">
										{{ form_widget(loginForm._password, { 'attr': { 'class': 'form-control', 'placeholder': 'Password',
										'id': 'inputPassword' } }) }}
										<label for="inputPassword"> <i class="fas fa-lock me-1"></i>Password </label>
									</div>
									<div class="text-error">{{ form_errors(loginForm._password) }}</div>
								</div>

								<div class="mb-3">
									<div class="form-check">
										<input class="form-check-input" type="checkbox" name="_remember_me" id="remember_me" />
										<label class="form-check-label" for="remember_me"> Remember me </label>
									</div>
								</div>

								<!-- reCAPTCHA -->
								<div class="form-wrapper">
									<div class="g-recaptcha" data-sitekey="6LduMSQrAAAAAMilOA0YocwwlbFgxMqgQ2RYoiWm"></div>
									<div class="error-message" id="recaptchaError">Please verify that you are not a robot</div>
								</div>

								<div class="d-grid">
									<button type="submit" class="btn btn-primary btn-lg">
										<i class="fas fa-sign-in-alt me-2"></i>Sign In
									</button>
								</div>

								<div class="text-center mt-3">
									<div class="mb-2">
										<a href="#" class="text-decoration-none">Forgot password?</a>
									</div>
									<p class="mb-0">
										Don't have an account?
										<a href="{{ path('app_register') }}" class="text-decoration-underline">Register now</a>
									</p>
								</div>
								{{ form_end(loginForm) }}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Script reCAPTCHA -->
<script src="https://www.google.com/recaptcha/api.js" async defer></script>

<!-- Validation JS -->
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const form = document.getElementById("loginForm");
		const email = document.getElementById("inputEmail");
		const password = document.getElementById("inputPassword");
		const emailError = document.getElementById("emailError");
		const passwordError = document.getElementById("passwordError");
		const recaptchaError = document.getElementById("recaptchaError");
		let formSubmitted = false;

		function validateEmail() {
			if (formSubmitted && !email.value) {
				email.classList.add("invalid-input");
				emailError.style.display = "block";
				return false;
			}
			email.classList.remove("invalid-input");
			emailError.style.display = "none";
			return true;
		}

		function validatePassword() {
			if (formSubmitted && !password.value) {
				passwordError.textContent = "Password is required";
				password.classList.add("invalid-input");
				passwordError.style.display = "block";
				return false;
			} else if (formSubmitted && password.value.length < 8) {
				passwordError.textContent = "Password must be at least 8 characters";
				password.classList.add("invalid-input");
				passwordError.style.display = "block";
				return false;
			}
			password.classList.remove("invalid-input");
			passwordError.style.display = "none";
			return true;
		}

		function validateRecaptcha() {
			const response = grecaptcha.getResponse();
			if (formSubmitted && response.length === 0) {
				recaptchaError.style.display = "block";
				return false;
			}
			recaptchaError.style.display = "none";
			return true;
		}

		form.addEventListener("submit", function (event) {
			formSubmitted = true;
			const isEmailValid = validateEmail();
			const isPasswordValid = validatePassword();
			const isRecaptchaValid = validateRecaptcha();

			if (!isEmailValid || !isPasswordValid || !isRecaptchaValid) {
				event.preventDefault();
				if (!isEmailValid) {
					email.focus();
				} else if (!isPasswordValid) {
					password.focus();
				}
			}
		});

		email.addEventListener("input", function () {
			if (formSubmitted) validateEmail();
		});

		password.addEventListener("input", function () {
			if (formSubmitted) validatePassword();
		});
	});
</script>
{% endblock %}
parameters:
    app.unsplash_client_id: '%env(UNSPLASH_CLIENT_ID)%'
    app.mailer_password: '%env(MAILER_PASSWORD)%'
    app.exchange_api_key: '%env(EXCHANGE_API_KEY)%'
    app.country_currency_api_token: '%env(COUNTRY_CURRENCY_API_TOKEN)%'
    app.gemini_api_key: '%env(GEMINI_API_KEY)%'
    app.image_profanity_api_user: '%env(IMAGE_PROFANITY_USER)%'
    app.image_profanity_api_key: '%env(IMAGE_PROFANITY_API_KEY)%'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    stripe_public_key: '%env(STRIPE_PUBLIC_KEY)%'
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'

services:
    Symfony\Contracts\HttpClient\HttpClientInterface:
        factory: ['Symfony\Component\HttpClient\HttpClient', 'create']
        arguments:
            - { max_duration: 10, headers: { 'accept': 'application/json' }, http_version: '1.1' }

    # default configuration for services in *this* file
    _defaults:
        autowire: true
        autoconfigure: true

    # makes classes in src/ available to be used as services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Security\CustomAuthenticationSuccessHandler:
        arguments:
            $router: '@router'
            $security: '@security.helper'

    App\Service\CountryService: ~

    App\Form\RegistrationFormType:
        arguments:
            $countryService: '@App\Service\CountryService'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventSubscriber\CalendarSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }

    # Configuration spécifique pour les contrôleurs
    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]



    # Remplacez la configuration de SessionInterface par :
    Symfony\Component\HttpFoundation\Session\SessionInterface:
        factory: [ '@request_stack', 'getSession' ]
        public: true

    App\Service\OpenAIProfanityFilter:
        arguments:
            $apiKey: '%env(OPENAI_API_KEY)%'
            $model: 'text-moderation-latest'  # Modèle spécialisé pour la modération